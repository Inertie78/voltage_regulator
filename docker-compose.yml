name: regulation_tension
services : 
  flask :
    container_name: server_flask
    build : 
      context : ./flask 
      dockerfile : dockerfile.flask
    restart : always
    volumes : 
      - ./flask/main.py:/app/main.py:ro
      - ./flask/templates:/app/templates:ro     #ro pour read only
      - ./flask/static:/app/static:ro3
    ports :
      - 5000:5000

  program :
    container_name: program
    privileged: true
    build :
      context : ./program
      dockerfile : dockerfile.script 
    restart : always
    volumes :
      # fchier pour le scrip principal
      - ./program/main.py:/usr/src/app/main.py:ro
      - ./program/data.py:/usr/src/app/data.py:ro
      - ./program/transmitting.py:/usr/src/app/transmitting.py:ro
      - ./program/mode.py:/usr/src/app/mode.py:ro

      # Pour program pour la raspberry pi
      - ./program/raspberry/__init__.py:/usr/src/app/raspberry/__init__.py:ro
      - ./program/raspberry/infoPc.py:/usr/src/app/raspberry/infoPc.py:ro
      - ./program/raspberry/multimetre.py:/usr/src/app/raspberry/multimetre.py:ro
      - ./program/raspberry/lineGpio.py:/usr/src/app/raspberry/lineGpio.py:ro
      - ./program/raspberry/relay.py:/usr/src/app/raspberry/relay.py:ro
      
      # Pour program pour la dataBase prometheus
      - ./program/dataBase/__init__.py:/usr/src/app/dataBase/__init__.py:ro
      - ./program/dataBase/sensor.py:/usr/src/app/dataBase/sensor.py:ro
      - ./program/dataBase/prometheus.py:/usr/src/app/dataBase/prometheus.py:ro

      # pour les gpio sur la raspberry p
      - /dev/gpiochip0:/dev/gpiochip0:ro
      
      # Pour la lecture des infos sur la raspberry pi
      - /usr/bin/vcgencmd:/usr/bin/vcgencmd:ro
      - /usr/lib/arm-linux-gnueabihf/libvcos.so.0:/usr/lib/arm-linux-gnueabihf/libvcos.so.0:ro
      - /usr/lib/arm-linux-gnueabihf/libvchiq_arm.so.0:/usr/lib/arm-linux-gnueabihf/libvchiq_arm.so.0:ro
    ports:
      - "8000:8000"

  rev_proxy :
    container_name: rev_proxy
    build : 
      context : ./nginx
      dockerfile : dockerfile.rev_proxy
    volumes : 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports : 
      - 80:80
    restart : always
    depends_on : 
      - flask
      - program

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    user: root
    volumes:
      - ./prometheus/prometheus.yml:/workspace/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/workspace/prometheus.yml'
      - '--storage.tsdb.retention.size=20000MB'


  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"

    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini

    depends_on:
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"

volumes :
  prometheus :
  grafana :