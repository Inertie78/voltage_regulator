services : 

  rev_proxy :
    build : 
      context : ./nginx
      dockerfile : dockerfile.rev_proxy
    volumes : 
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports : 
      - 80:80
    restart : always
    depends_on : 
      - flask
      - prometheus
      - grafana

    networks:
      - front
      - back

  prometheus:
    image: prom/prometheus:v2.33.5
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/workspace
    command:
      - '--config.file=/workspace/prometheus.yml'

    networks:
      - front
      - back
  grafana:
    image: grafana/grafana:8.4.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"

    networks:
      - front
      - back
    
  flask :
    build : 
      context : flask 
      dockerfile : dockerfile.flask
    restart : always
    depends_on : 
      - prometheus
      
    volumes : 
      - ./flask/main.py:/app/main.py:ro
      - ./flask/templates:/app/templates:ro     #ro pour read only
      - ./flask/static:/app/static:ro
    ports :
      - 8090:5000
    
    networks :
      - front
      - back

  script :
    build :
      context : ./script
      dockerfile : dockerfile.script
    restart : always
    depends_on :
      - flask
      

#    volumes : 
#      - /sys/class/gpio:/sys/class/gpio

    networks :
      - front
      - back

volumes :
  prometheus :
networks : 
  front :
  back :